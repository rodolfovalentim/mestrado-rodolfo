@article{Kobayashi2018,
abstract = {This paper discusses the problem of embedding service function chains (SFCs) in an interconnected network with multiple datacenter sites. The problem is formulated as a Subtopology Composition Problem (SCP), which is to design a subnetwork that includes terminal nodes and datacenter nodes from the substrate network, aimed at optimizing distance-based latency in SFCs. The intractability of the problem is discussed, and a heuristic is proposed for the problem. Simulations are conducted to demonstrate the effectiveness of the proposed method in different graph models.},
author = {Kobayashi, Hideo and Ishigaki, Genya and Gour, Riti and Jue, Jason P. and Shinomiya, Norihiko},
doi = {10.1109/ICCNC.2018.8390413},
isbn = {9781538636527},
journal = {2018 International Conference on Computing, Networking and Communications, ICNC 2018},
keywords = {Chain embedding,Inter-datacenter network,Network Function Virtualization (NFV),Service function chain},
pages = {724--728},
title = {{Embedding Chains of Virtual Network Functions in Inter-Datacenter Networks}},
year = {2018}
}
@article{Pei2019,
abstract = {Network Function Virtualization (NFV) and Software-Defined Networks (SDN) enable Internet Service Providers (ISPs) to place Virtual Network Functions (VNFs) to achieve the performance and security benefit without incurring high Operating Expenses (OPEX) and Capital Expenses (CAPEX). In NFV environment, Service Function Chains (SFCs) always need to steer the traffic through a series of VNF instances in predefined orders. Moreover, the required number and placement of VNF instances should be optimized to adapt to dynamic network load. Therefore, it is considerable for ISPs to conduct an optimal SFC embedding strategy to improve the network performance and revenue. In the paper, we study the SFC Embedding Problem (SFC-EP) with dynamic VNF placement in geo-distributed cloud system. We formulate this problem as a Binary Integer Programming (BIP) model aiming to embed SFC requests with the minimum embedding cost. Furthermore, the novel SFC eMbedding APproach (SFC-MAP) and VNF Dynamic Release Algorithm (VNF-DRA) have been proposed to efficiently embed SFC requests and optimize the number of placed VNF instances. Performance evaluation results show that the proposed algorithms can provide higher performance in terms of SFC request acceptance rate, network throughput, and mean VNF utilization rate and efficiently reduce the total VNF running time compared with the algorithms in existing literatures.},
author = {Pei, Jianing and Hong, Peilin and Xue, Kaiping and Li, Defang},
doi = {10.1109/TPDS.2018.2880992},
issn = {15582183},
journal = {IEEE Transactions on Parallel and Distributed Systems},
keywords = {Service function chain,dynamic VNF placement,virtual network function},
number = {10},
pages = {2179--2192},
publisher = {IEEE},
title = {{Efficiently Embedding Service Function Chains with Dynamic Virtual Network Function Placement in Geo-Distributed Cloud System}},
volume = {30},
year = {2019}
}
@article{Bhamare2017,
abstract = {Service Function Chaining (SFC) is the problem of deploying various network service instances over geographically distributed data centers and providing inter-connectivity among them. The goal is to enable the network traffic to flow smoothly through the underlying network, resulting in an optimal quality of experience to the end-users. Proper chaining of network functions leads to optimal utilization of distributed resources. This has been a de-facto model in the telecom industry with network functions deployed over underlying hardware. Though this model has served the telecom industry well so far, it has been adapted mostly to suit the static behavior of network services and service demands due to the deployment of the services directly over physical resources. This results in network ossification with larger delays to the end-users, especially with the data-centric model in which the computational resources are moving closer to end users. A novel networking paradigm, Network Function Virtualization (NFV), meets the user demands dynamically and reduces operational expenses (OpEx) and capital expenditures (CapEx), by implementing network functions in the software layer known as virtual network functions (VNFs). VNFs are then interconnected to form a complete end-to-end service, also known as service function chains (SFCs). In this work, we study the problem of deploying service function chains over network function virtualized architecture. Specifically, we study virtual network function placement problem for the optimal SFC formation across geographically distributed clouds. We set up the problem of minimizing inter-cloud traffic and response time in a multi-cloud scenario as an ILP optimization problem, along with important constraints such as total deployment costs and service level agreements (SLAs). We consider link delays and computational delays in our model. The link queues are modeled as M/D/1 (single server/Poisson arrival/deterministic service times) and server queues as M/M/1 (single server/Poisson arrival/exponential service times) based on the statistical analysis. In addition, we present a novel affinity-based approach (ABA) to solve the problem for larger networks. We provide a performance comparison between the proposed heuristic and simple greedy approach (SGA) used in the state-of-the-art systems. Greedy approach has already been widely studied in the literature for the VM placement problem. Especially we compare our proposed heuristic with a greedy approach using first-fit decreasing (FFD) method. By observing the results, we conclude that the affinity-based approach for placing the service functions in the network produces better results compared against the simple greedy (FFD) approach in terms of both, total delays and total resource cost. We observe that with a little compromise (gap of less than 10{\%} of the optimal) in the solution quality (total delays and cost), affinity-based heuristic can solve the larger problem more quickly than ILP.},
author = {Bhamare, Deval and Samaka, Mohammed and Erbad, Aiman and Jain, Raj and Gupta, Lav and Chan, H. Anthony},
doi = {10.1016/j.comcom.2017.02.011},
issn = {01403664},
journal = {Computer Communications},
keywords = {Affinity,Greedy,Multi-cloud,Network function virtualization,Optimal placement,Service function chaining},
pages = {1--16},
publisher = {Elsevier B.V.},
title = {{Optimal virtual network function placement in multi-cloud service function chaining architecture}},
url = {http://dx.doi.org/10.1016/j.comcom.2017.02.011},
volume = {102},
year = {2017}
}
@article{Dietrich2017,
abstract = {Network function (NF) virtualization decouples NFs from the underlying middlebox hardware and promotes their deployment on virtualized network infrastructures. This essentially paves the way for the migration of NFs into clouds (i.e., NF-as-a-Service), achieving a drastic reduction of middlebox investment and operational costs for enterprises. In this context, service chains (expressing middlebox policies in the enterprise network) should be mapped onto datacenter networks, ensuring correctness, resource efficiency, as well as compliance with the provider's policy. The network service embedding (NSE) problem is further exacerbated by two challenging aspects: 1) traffic scaling caused by certain NFs (e.g., caches and WAN optimizers) and 2) NF location dependencies. Traffic scaling requires resource reservations different from the ones specified in the service chain, whereas NF location dependencies, in conjunction with the limited geographic footprint of NF providers (NFPs), raise the need for NSE across multiple NFPs. In this paper, we present a holistic solution to the multi-provider NSE problem. We decompose NSE into: 1) NF-graph partitioning performed by a centralized coordinator and 2) NF-subgraph mapping onto datacenter networks. We present linear programming formulations to derive near-optimal solutions for both problems. We address the challenging aspect of traffic scaling by introducing a new service model that supports demand transformations. We also define topology abstractions for NF-graph partitioning. Furthermore, we discuss the steps required to embed service chains across multiple NFPs, using our NSE orchestrator (Nestor). We perform an evaluation study of multi-provider NSE with emphasis on NF-graph partitioning optimizations tailored to the client and NFPs. Our evaluation results further uncover significant savings in terms of service cost and resource consumption due to the demand transformations.},
author = {Dietrich, David and Abujoda, Ahmed and Rizk, Amr and Papadimitriou, Panagiotis},
doi = {10.1109/TNSM.2017.2654681},
issn = {19324537},
journal = {IEEE Transactions on Network and Service Management},
keywords = {Network function virtualization,network service embedding,orchestration,service chaining},
number = {1},
pages = {91--105},
title = {{Multi-Provider Service Chain Embedding With Nestor}},
volume = {14},
year = {2017}
}
@article{Sun2019,
abstract = {Service function chaining (SFC) provisioning is helpful not only for saving the capital expenditure (CAPEX) and operational expenditure (OPEX) of a network provider but also for reducing energy consumption in the substrate network. However, to the best of our knowledge, there has been little research on the problem of energy consumption for orchestrating online SFC requests in multi-domain networks. In this paper, we first formulate the problem of an energy-efficient online SFC request that is orchestrated across multiple clouds as an integer linear programming (ILP) model to find an optimal solution. Then, we analyze the complexity of this ILP model and prove that the problem is NP-hard. Additionally, we propose a low-complexity heuristic algorithm named energy-efficient online SFC request orchestration across multiple domains (EE-SFCO-MD) for near-optimally solving the mentioned problem. Finally, we conduct simulation experiments to evaluate the performance of our algorithm. Simulation results show that EE-SFCO-MD consumes less energy than existing approaches while the online SFC's requirements are met and the privacy of each cloud is effectively guaranteed. The low computational complexity of the heuristic approach makes it applicable for quickly responding to online SFC requests.},
author = {Sun, Gang and Li, Yayu and Yu, Hongfang and Vasilakos, Athanasios V. and Du, Xiaojiang and Guizani, Mohsen},
doi = {10.1016/j.future.2018.09.037},
issn = {0167739X},
journal = {Future Generation Computer Systems},
keywords = {Energy efficiency,Multi-domain networks,Orchestration,Service function chaining},
pages = {347--360},
publisher = {Elsevier B.V.},
title = {{Energy-efficient and traffic-aware service function chaining orchestration in multi-domain networks}},
url = {https://doi.org/10.1016/j.future.2018.09.037},
volume = {91},
year = {2019}
}
@article{Quinn2015,
abstract = {This document provides an overview of the issues associated with the deployment of service functions (such as firewalls, load balancers, etc.) in large-scale environments. The term "service function chaining" is used to describe the definition and instantiation of an ordered list of instances of such service functions, and the subsequent "steering" of traffic flows through those service functions. The set of enabled service function chains reflects operator service offerings and is designed in conjunction with application delivery and service and network policy. This document also identifies several key areas that the Service Function Chaining (SFC) working group will investigate to guide its architectural and protocol work and associated documents.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Quinn, Paul and Nadeau, Tom},
doi = {10.17487/rfc7498},
eprint = {arXiv:1011.1669v3},
isbn = {9788578110796},
issn = {2070-1721},
journal = {Ietf Rfc},
keywords = {icle},
number = {9},
pages = {1689--1699},
pmid = {25246403},
title = {{Problem Statement for Service Function Chaining}},
url = {https://tools.ietf.org/html/rfc7498},
volume = {53},
year = {2015}
}
@techreport{Pignataro2015,
abstract = {This document describes an architecture for the specification, creation, and ongoing maintenance of Service Function Chains (SFCs) in a network. It includes architectural concepts, principles, and components used in the construction of composite services through deployment of SFCs, with a focus on those to be standardized in the IETF. This document does not propose solutions, protocols, or extensions to existing protocols.},
author = {Pignataro, Joel M. Halpern and Carlos},
booktitle = {Rfc},
doi = {10.17487/RFC7665},
editor = {Halpern, J. and Pignataro, C.},
keywords = {icle},
month = {oct},
number = {9},
pages = {1689--1699},
title = {{Service Function Chaining (SFC) Architecture}},
url = {https://www.rfc-editor.org/info/rfc7665},
volume = {53},
year = {2015}
}
@inproceedings{Valentim2019,
abstract = {As redes de Data Center, que precisam atender de forma din{\^{a}}mica uma grande quantidade de fluxos com diferentes requisitos de servi{\c{c}}o, necessitam de mecanismos de balanceamento de carga. Entretanto, as abordagens tradicionais de balanceamento de carga n{\~{a}}o permitem a completa utiliza{\c{c}}{\~{a}}o dos recursos de rede de forma simples, program{\'{a}}vel e escal{\'{a}}vel. Nesse contexto, este artigo prop{\~{o}}e RDNA Balance que explora a balanceamento por isolamento de fluxos elefante e roteamento na origem, com suporte no n{\'{u}}cleo da rede, e opera{\c{c}}{\~{o}}es de classifica{\c{c}}{\~{a}}o realizadas na borda usando recursos existentes no protocolo OpenFlow. Os resultados mostram que essa abordagem {\'{e}} capaz de prover um balanceamento de carga simples, escal{\'{a}}vel, e program{\'{a}}vel.},
author = {Valentim, Rodolfo and Dominicini, Cristina Klippel and Villaca, Rodolfo S. and Martinello, Magnos and Ribeiro, Moises and {Rossi Mafioletti}, Diego},
booktitle = {Anais do XXXVII Simp{\'{o}}sio Brasileiro de Redes de Computadores e Sistemas Distribu{\'{i}}dos (SBRC 2019)},
doi = {10.5753/sbrc.2019.7418},
month = {aug},
pages = {1000--1013},
publisher = {Sociedade Brasileira de Computa{\c{c}}{\~{a}}o - SBC},
title = {{RDNA Balance: Balanceamento de Carga por Isolamento de Fluxos Elefante em Data Centers com Roteamento na Origem}},
url = {https://sol.sbc.org.br/index.php/sbrc/article/view/7418},
year = {2019}
}
@article{Gupta2017,
abstract = {Network function virtualization (NFV) over multi-cloud promises network service providers amazing flexibility in service deployment and optimizing cost. Telecommunications applications are, however, sensitive to performance indicators, especially latency, which tend to get degraded by both the virtualization and the multiple cloud requirement for widely distributed coverage. In this work we propose an efficient framework that uses the novel concept of random cloud selection combined with a support vector regression based predictive model for cost optimized latency aware placement (COLAP) of service function chains. Extensive empirical analysis has been carried out with training datasets generated using a queuing-theoretic model. The results show good generalization performance of the predictive algorithm. The proposed framework can place thousands of virtual network functions in less than a minute and has high acceptance ratio.},
author = {Gupta, Lav and Samaka, M. and Jain, Raj and Erbad, Aiman and Bhamare, Deval and Metz, Chris},
doi = {10.1109/CCWC.2017.7868377},
isbn = {9781509042289},
journal = {2017 IEEE 7th Annual Computing and Communication Workshop and Conference, CCWC 2017},
keywords = {latency,machine learning,multi-cloud computing,network function virtualization,placement,service function chain,support vector regression,virtual network function},
title = {{COLAP: A predictive framework for service function chain placement in a multi-cloud environment}},
year = {2017}
}
@article{Vu2016,
abstract = {In recent year, the rise of Network Function Virtualization (NFV) and Software-defined Networking (SDN) makes the service chain and application provisioning process much agile and simpler, promoting the development of Service Function Chaining (SFC). Service Function Chaining (SFC) provides flexibility and agility for deploying and managing network services. The most challenging problems in SFC are deploying and organizing in large scale, multi-region data center with multiple operational teams. One feasible solution for these issues is decomposing SFC into multiple nested lower-level domains, establishing a hierarchical structure. In this paper, we present a Hierarchical Service Function Chaining (H-SFC) architecture using SDN to enable multi-layered service function chains. We implement the architecture in the OpenDaylight SFC environment and prove that it could simplify SFC management and orchestration.},
author = {Vu, Anh Vu and Kim, Younghan},
doi = {10.1109/NETSOFT.2016.7502477},
isbn = {9781467394864},
journal = {IEEE NETSOFT 2016 - 2016 IEEE NetSoft Conference and Workshops: Software-Defined Infrastructure for Networks, Clouds, IoT and Services},
keywords = {Network Function Virtualization,OpenDaylight,Service Function Chaining,Software-defined Networking},
pages = {411--416},
title = {{An implementation of hierarchical service function chaining using OpenDaylight platform}},
year = {2016}
}
@techreport{Dolson2018,
author = {Dolson, D. and Homma, S. and Lopez, D. and Boucadair, M.},
booktitle = {Rfc},
doi = {10.17487/RFC8459},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/rfc8459.pdf:pdf},
issn = {2070-1721},
keywords = {icle},
month = {sep},
pages = {1--29},
title = {{Hierarchical Service Function Chaining (hSFC)}},
url = {https://www.rfc-editor.org/info/rfc8459},
volume = {53},
year = {2018}
}
@article{Dominicini2020,
abstract = {Current service function chaining (SFC) solutions are cumbersome adaptations of classic routing mechanisms, which lack flexibility and agility to cope with new dynamic services required by network functions virtualization (NFV). These SFC solutions require modification of forwarding tables in both physical and virtual elements in the path when updating a chain. In addition, current SFC implementations restrict traffic engineering to sub-optimal resource allocation solutions, because limited switch table sizes prevent the consideration of all possible traffic paths. Moreover, overlay chaining decisions are usually decoupled from the actual underlay routing of packets across service functions. To tackle these issues, we propose KeySFC, a traffic steering scheme that uses software-defined networking (SDN) and strict source routing. KeySFC exploits the fabric network concept in data center networks (DCNs) in two ways: (i) edge software switches classify, encapsulate, forward, and decapsulate flows with SFC labels; and (ii) core tableless switches forward packets based on simple modulo operations over these labels. Thus, the modification of a small number of flow entries in edge elements allows changing of SFC labels and effectively stitching paths via SDN. An OpenStack-based prototype demonstrates that the traffic steering scheme provided by KeySFC has the potential to enable efficient traffic engineering and to provide agile path migration per SFC segment.},
author = {Dominicini, Cristina K and Vassoler, Gilmar L and Valentim, Rodolfo and Villaca, Rodolfo S and Ribeiro, Mois{\'{e}}s R N and Martinello, Magnos and Zambon, Eduardo},
doi = {https://doi.org/10.1016/j.comnet.2019.106975},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/1-s2.0-S138912861930194X-main.pdf:pdf},
issn = {1389-1286},
journal = {Computer Networks},
keywords = {NFV,Orchestration,SDN,SFC,Source routing,Traffic steering},
pages = {106975},
title = {{KeySFC: Traffic steering using strict source routing for dynamic and efficient network orchestration}},
url = {http://www.sciencedirect.com/science/article/pii/S138912861930194X},
volume = {167},
year = {2020}
}
@article{Medhat2017,
author = {Medhat, Ahmed M and Taleb, Tarik and Elmangoush, Asma and Carella, Giuseppe A and Covaci, Stefan and Magedanz, Thomas},
doi = {10.1109/MCOM.2016.1600219RP},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/07593430.pdf:pdf},
issn = {0163-6804},
journal = {IEEE Communications Magazine},
month = {feb},
number = {2},
pages = {216--223},
title = {{Service Function Chaining in Next Generation Networks: State of the Art and Research Challenges}},
url = {https://ieeexplore.ieee.org/abstract/document/7593430/ http://ieeexplore.ieee.org/document/7593430/},
volume = {55},
year = {2017}
}
@article{Tufail2013,
abstract = {applicability for this approach.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Tufail, S. Kumar and M.},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/draft-ietf-sfc-dc-use-cases-06.pdf:pdf},
isbn = {9788578110796},
issn = {1098-6596},
journal = {Ietf},
keywords = {icle},
number = {9},
pages = {1689--1699},
pmid = {25246403},
title = {{Service Function Chaining Use Cases In Data Centers}},
url = {https://datatracker.ietf.org/doc/html/draft-ietf-sfc-dc-use-cases-06},
volume = {53},
year = {2013}
}
@article{Mahmoodi2017,
author = {Mahmoodi, Toktam and {Van Helvoort}, Huub and Mansfield, Scott},
doi = {10.1109/MCOMSTD.2017.8258603},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/gs{\_}NFV-MAN001v010101p.pdf:pdf},
issn = {24712825},
journal = {IEEE Communications Standards Magazine},
keywords = {NFV,configuration,management,network,nfv,orchestration},
number = {4},
pages = {60},
title = {{Network Functions Virtualisation (NFV); Management and Orchestration}},
volume = {1},
year = {2017}
}
@article{Mijumbi2016,
abstract = {NFV continues to draw immense attention from researchers in both industry and academia. By decoupling NFs from the physical equipment on which they run, NFV promises to reduce CAPEX and OPEX, make networks more scalable and flexible, and lead to increased service agility. However, despite the unprecedented interest it has gained, there are still obstacles that must be overcome before NFV can advance to reality in industrial deployments, let alone delivering on the anticipated gains. While doing so, important challenges associated with network and function MANO need to be addressed. In this article, we introduce NFV and give an overview of the MANO framework that has been proposed by ETSI. We then present representative projects and vendor products that focus on MANO, and discuss their features and relationship with the framework. Finally, we identify open MANO challenges as well as opportunities for future research.},
author = {Mijumbi, Rashid and Serrat, Joan and Gorricho, Juan Luis and Latre, Steven and Charalambides, Marinos and Lopez, Diego},
doi = {10.1109/MCOM.2016.7378433},
file = {:home/rodolfo/Documents/mestrado-rodolfo/references/ieeeComms16rm.pdf:pdf},
issn = {01636804},
journal = {IEEE Communications Magazine},
keywords = {Cloud computing,Computer architecture,Data models,Systems support,Telecommunication network management},
number = {1},
pages = {98--105},
title = {{Management and orchestration challenges in network functions virtualization}},
volume = {54},
year = {2016}
}
